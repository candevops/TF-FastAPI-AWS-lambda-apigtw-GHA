name: FastAPI CI/CD

on:
  # Trigger the workflow on push
  push:
    branches: 
      # Push events on main branch
      - main 

jobs:

  CI:
    # Define the runner used in the workflow
    runs-on: ubuntu-latest
    steps:   
      # Check out repo so our workflow can access it
      - uses: actions/checkout@v2
      
      # Step-1 Setup Python
      - name: Set up Python
        # This action sets up a Python environment for use in actions
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
          # optional: architecture: x64 x64 or x86. Defaults to x64 if not specified

      # Step-2 Install Python Virtual ENV
      - name: Install Python Virtual ENV
        run: pip3 install virtualenv

      # Step-3 Setup Virtual ENV
      - name:  Virtual ENV
        uses: actions/cache@v2
        id: cache-venv # name for referring later
        with:
          path: venv # what we cache: the Virtual ENV
          # The cache key depends on requirements.txt
          key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-venv-

      # Step-4 Build a Virtual ENV, but only if it doesn't already exist
      - name: Activate Virtual ENV
        run: python -m venv venv && source venv/bin/activate && pip3 install -r requirements.txt
        if: steps.cache-venv.outputs.cache-hit != 'true'

      - name: Create archive of dependencies
        run: |
          cd ./venv/lib/python3.7/site-packages
          zip -r9 ../../../../my-deployment-package.zip .
      - name: Add APP files to Zip file
        run: cd ./app && zip -g ../my-deployment-package.zip -r .
      - name: Add DATA files to Zip file
        run: cd ./data && zip -g ../my-deployment-package.zip -r .

      - name: Upload zip file artifact
        uses: actions/upload-artifact@v2
        with:
          name: my-deployment-package
          path: my-deployment-package.zip


      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
      
      - name: Initialize Terraform
        run: |
          cd infrastructure
          terraform init

      - name: validate Terraform
        run: |
          cd infrastructure
          terraform validate

      - name: plan Terraform
        run: |
          cd infrastructure
          terraform plan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  
  
      - name: Download Lambda my-deployment-package.zip
        uses: actions/download-artifact@v2
        with:
          name: my-deployment-package
          
      # - name: Apply Terraform
      #   run: |
      #     cd infrastructure
      #     terraform apply -auto-approve
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
